option_settings:
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx

files:
  "/etc/nginx/conf.d/dev-settings.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Configuración específica para desarrollo
      client_max_body_size 50M;
      
      # Configuración de logs más detallada
      access_log /var/log/nginx/access.log main;
      error_log /var/log/nginx/error.log debug;
      
      # Gzip configuration
      gzip on;
      gzip_comp_level 4;
      gzip_types
          text/plain
          text/css
          application/json
          application/javascript
          text/xml
          application/xml
          application/xml+rss
          text/javascript
          application/pdf;

  "/etc/nginx/conf.d/cors.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # CORS permisivo para desarrollo
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

  "/etc/nginx/conf.d/static-files.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      location /uploads/ {
          alias /var/app/current/uploads/;
          expires 1y;
          add_header Cache-Control "public, immutable";
          access_log off;
      }
      
      location /static/ {
          alias /var/app/current/public/;
          expires 1y;
          add_header Cache-Control "public, immutable";
          access_log off;
      }

  "/etc/nginx/conf.d/api-proxy.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Configuración específica para rutas de API
      location /api/ {
          proxy_pass http://127.0.0.1:8080;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_cache_bypass $http_upgrade;
          proxy_connect_timeout 60s;
          proxy_send_timeout 60s;
          proxy_read_timeout 60s;
          client_max_body_size 50M;
      }
      
      # Configuración para Swagger/API Docs
      location /api-docs/ {
          proxy_pass http://127.0.0.1:8080;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

  "/etc/nginx/conf.d/security.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Headers de seguridad
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      
      # Ocultar versión de nginx
      server_tokens off;
      
      # Configuración de timeouts
      client_body_timeout 12;
      client_header_timeout 12;
      keepalive_timeout 15;
      send_timeout 10;
      
      # Limitar tamaño de buffer
      client_body_buffer_size 1K;
      client_header_buffer_size 1k;
      client_max_body_size 50M;
      large_client_header_buffers 2 1k;

commands:
  01_backup_nginx_conf:
    command: "cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup"
    ignoreErrors: true
  02_test_nginx_config:
    command: "nginx -t"
    ignoreErrors: true
  03_reload_nginx:
    command: "service nginx reload"
    ignoreErrors: true