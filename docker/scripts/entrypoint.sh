#!/bin/bash
set -e

echo "üöÄ Iniciando LA ARTESA API..."
echo "Entorno: ${NODE_ENV:-development}"
echo "Puerto: ${PORT:-3000}"

# Funci√≥n para logging
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Verificar que las variables de entorno cr√≠ticas est√©n presentes
if [ -z "$DB_HOST" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASSWORD" ] || [ -z "$DB_DATABASE" ]; then
    log "‚ùå ERROR: Variables de base de datos faltantes"
    exit 1
fi

if [ -z "$JWT_SECRET" ]; then
    log "‚ùå ERROR: JWT_SECRET no configurado"
    exit 1
fi

log "‚úÖ Variables de entorno verificadas"

# Crear directorios si no existen
mkdir -p /app/uploads/client-profiles
mkdir -p /app/tmp
mkdir -p /app/logs

# Asegurar permisos correctos
chmod 755 /app/uploads /app/tmp /app/logs

log "üìÅ Directorios preparados"

# Esperar a que la base de datos est√© disponible
wait_for_db() {
    log "üîÑ Esperando conexi√≥n a la base de datos..."
    for i in {1..30}; do
        if nc -z "$DB_HOST" "$DB_PORT" 2>/dev/null; then
            log "‚úÖ Base de datos disponible"
            return 0
        fi
        log "‚è≥ Intento $i/30 - Base de datos no disponible, esperando..."
        sleep 2
    done
    log "‚ùå ERROR: No se pudo conectar a la base de datos despu√©s de 60 segundos"
    exit 1
}

# Solo esperar DB en producci√≥n o si est√° configurado
if [ "$NODE_ENV" = "production" ] || [ "$WAIT_FOR_DB" = "true" ]; then
    wait_for_db
fi

# Regenerar documentaci√≥n Swagger si es necesario
if [ ! -f "/app/swagger.json" ] || [ "$REGENERATE_DOCS" = "true" ]; then
    log "üìñ Generando documentaci√≥n Swagger..."
    npm run generate-swagger || log "‚ö†Ô∏è Warning: No se pudo generar documentaci√≥n Swagger"
fi

log "üéØ Iniciando aplicaci√≥n..."

# Ejecutar comando pasado como par√°metros
exec "$@"