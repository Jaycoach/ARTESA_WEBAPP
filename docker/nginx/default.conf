# Configuración upstream para la aplicación Node.js
upstream artesa_app {
    server app:3000;
    keepalive 32;
}

# Redirigir HTTP a HTTPS (si usas SSL)
server {
    listen 80;
    server_name ec2-44-216-131-63.compute-1.amazonaws.com _;
    
    # Health check para ALB
    location /health {
        proxy_pass http://artesa_app/api/health;
        proxy_set_header Host $host;
    }

    # Manejar peticiones OPTIONS específicamente para CORS preflight
    location / {
        # Headers CORS para todas las solicitudes
        add_header Access-Control-Allow-Origin "https://d1bqegutwmfn98.cloudfront.net" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, g-recaptcha-response, recaptchatoken, bypass-tunnel-reminder, ngrok-skip-browser-warning, dnt, sec-ch-ua, sec-ch-ua-mobile, sec-ch-ua-platform" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Manejar peticiones OPTIONS (CORS preflight)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://d1bqegutwmfn98.cloudfront.net" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, g-recaptcha-response, recaptchatoken, bypass-tunnel-reminder, ngrok-skip-browser-warning, dnt, sec-ch-ua, sec-ch-ua-mobile, sec-ch-ua-platform" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        # Proxy a la aplicación Node.js
        proxy_pass http://artesa_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        client_max_body_size 50M;
    }
}

# Configuración HTTPS (para producción)
server {
    listen 443 ssl http2;
    server_name _;

    # Certificados SSL (configurar en producción)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # Headers CORS específicos para CloudFront
    add_header Access-Control-Allow-Origin "https://d1bqegutwmfn98.cloudfront.net" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, g-recaptcha-response, recaptchatoken" always;     
    add_header Access-Control-Allow-Credentials "true" always;

    # Ocultar versión de nginx
    server_tokens off;

    # Headers CORS para CloudFront
    add_header Access-Control-Allow-Origin "https://d1bqegutwmfn98.cloudfront.net" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, g-recaptcha-response, recaptchatoken" always;     
    add_header Access-Control-Allow-Credentials "true" always;

    # API routes
    # Manejar peticiones OPTIONS (CORS preflight)
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://d1bqegutwmfn98.cloudfront.net" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH, HEAD" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, g-recaptcha-response, recaptchatoken" always;
            add_header Access-Control-Allow-Credentials "true" always; 
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type "text/plain charset=UTF-8";        
            add_header Content-Length 0;
            return 204;
        }

        proxy_pass http://artesa_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        client_max_body_size 50M;
    }

    # Documentación API
    location /api-docs/ {
        proxy_pass http://artesa_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Swagger JSON
    location /swagger.json {
        proxy_pass http://artesa_app;
        proxy_set_header Host $host;
    }

    # Archivos estáticos (uploads)
    location /uploads/ {
        proxy_pass http://artesa_app;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check
    location /health {
        proxy_pass http://artesa_app/api/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # Fallback para otras rutas
    location / {
        proxy_pass http://artesa_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
